load("@rules_cc//cc:defs.bzl", "cc_library")

_public_hdrs = [
    "include/boost/*.hpp",
    "include/boost/spirit/*.hpp",
    "include/boost/spirit/home/*.hpp",
    "include/boost/spirit/home/*.hpp",
    "include/boost/spirit/home/classic/*.hpp",
    "include/boost/spirit/home/classic/actor/*.hpp",
    "include/boost/spirit/home/classic/attribute/*.hpp",
    "include/boost/spirit/home/classic/core/*.hpp",
    "include/boost/spirit/home/classic/core/composite/*.hpp",
    "include/boost/spirit/home/classic/core/non_terminal/*.hpp",
    "include/boost/spirit/home/classic/core/primitives/*.hpp",
    "include/boost/spirit/home/classic/core/scanner/*.hpp",
    "include/boost/spirit/home/classic/debug/*.hpp",
    "include/boost/spirit/home/classic/dynamic/*.hpp",
    "include/boost/spirit/home/classic/error_handling/*.hpp",
    "include/boost/spirit/home/classic/iterator/*.hpp",
    "include/boost/spirit/home/classic/meta/*.hpp",
    "include/boost/spirit/home/classic/phoenix/*.hpp",
    "include/boost/spirit/home/classic/symbols/*.hpp",
    "include/boost/spirit/home/classic/tree/*.hpp",
    "include/boost/spirit/home/classic/utility/*.hpp",
    "include/boost/spirit/home/karma/*.hpp",
    "include/boost/spirit/home/karma/action/*.hpp",
    "include/boost/spirit/home/karma/auto/*.hpp",
    "include/boost/spirit/home/karma/auxilary/*.hpp",
    "include/boost/spirit/home/karma/binary/*.hpp",
    "include/boost/spirit/home/karma/char/*.hpp",
    "include/boost/spirit/home/karma/directive/*.hpp",
    "include/boost/spirit/home/karma/nonterminal/*.hpp",
    "include/boost/spirit/home/karma/numeric/*.hpp",
    "include/boost/spirit/home/karma/operator/*.hpp",
    "include/boost/spirit/home/karma/stream/*.hpp",
    "include/boost/spirit/home/karma/string/*.hpp",
    "include/boost/spirit/home/lex/*.hpp",
    "include/boost/spirit/home/lex/lexer/*.hpp",
    "include/boost/spirit/home/lex/lexer/lexertl/*.hpp",
    "include/boost/spirit/home/lex/qi/*.hpp",
    "include/boost/spirit/home/qi/*.hpp",
    "include/boost/spirit/home/qi/action/*.hpp",
    "include/boost/spirit/home/qi/auto/*.hpp",
    "include/boost/spirit/home/qi/auxilary/*.hpp",
    "include/boost/spirit/home/qi/binary/*.hpp",
    "include/boost/spirit/home/qi/char/*.hpp",
    "include/boost/spirit/home/qi/detail/*.hpp",
    "include/boost/spirit/home/qi/directive/*.hpp",
    "include/boost/spirit/home/qi/nonterminal/*.hpp",
    "include/boost/spirit/home/qi/numeric/*.hpp",
    "include/boost/spirit/home/qi/operator/*.hpp",
    "include/boost/spirit/home/qi/stream/*.hpp",
    "include/boost/spirit/home/qi/string/*.hpp",
    "include/boost/spirit/home/support/*.hpp",
    "include/boost/spirit/home/support/algorithm/*.hpp",
    "include/boost/spirit/home/support/auto/*.hpp",
    "include/boost/spirit/home/support/auxilary/*.hpp",
    "include/boost/spirit/home/support/char_encoding/*.hpp",
    "include/boost/spirit/home/support/char_encoding/unicode/*.hpp",
    "include/boost/spirit/home/support/char_set/*.hpp",
    "include/boost/spirit/home/support/iterators/*.hpp",
    "include/boost/spirit/home/support/nonterminal/*.hpp",
    "include/boost/spirit/home/support/utree/*.hpp",
    "include/boost/spirit/home/x3/*.hpp",
    "include/boost/spirit/home/x3/auxilary/*.hpp",
    "include/boost/spirit/home/x3/binary/*.hpp",
    "include/boost/spirit/home/x3/char/*.hpp",
    "include/boost/spirit/home/x3/core/*.hpp",
    "include/boost/spirit/home/x3/directive/*.hpp",
    "include/boost/spirit/home/x3/nonterminal/*.hpp",
    "include/boost/spirit/home/x3/numeric/*.hpp",
    "include/boost/spirit/home/x3/operator/*.hpp",
    "include/boost/spirit/home/x3/string/*.hpp",
    "include/boost/spirit/home/x3/support/*.hpp",
    "include/boost/spirit/home/x3/support/ast/*.hpp",
    "include/boost/spirit/home/x3/support/numeric_utils/*.hpp",
    "include/boost/spirit/home/x3/support/traits/*.hpp",
    "include/boost/spirit/home/x3/support/utility/*.hpp",
    "include/boost/spirit/include/*.hpp",
    "include/boost/spirit/repository/*.hpp",
    "include/boost/spirit/repository/home/*.hpp",
    "include/boost/spirit/repository/home/karma/*.hpp",
    "include/boost/spirit/repository/home/karma/direcitve/*.hpp",
    "include/boost/spirit/repository/home/karma/nonterminal/*.hpp",
    "include/boost/spirit/repository/home/qi/*.hpp",
    "include/boost/spirit/repository/home/qi/directive/*.hpp",
    "include/boost/spirit/repository/home/qi/nonterminal/*.hpp",
    "include/boost/spirit/repository/home/qi/operator/*.hpp",
    "include/boost/spirit/repository/home/qi/primitive/*.hpp",
    "include/boost/spirit/repository/home/support/*.hpp",
    "include/boost/spirit/repository/include/*.hpp",
]

cc_library(
    name = "spirit_internal",
    hdrs = glob(["include/boost/**/*.hpp"], exclude = _public_hdrs),
    srcs = glob(["include/boost/**/*.ipp"]),
    deps = [
        "@boost//utility",
    ],
)

cc_library(
    name = "spirit",
    visibility = ["//visibility:public"],
    includes = ["include"],
    hdrs = glob(_public_hdrs),
    deps = [
        ":spirit_internal",
        "@boost//mpl",
        "@boost//type_traits",
        "@boost//core",
        "@boost//fusion",
        "@boost//variant",
        "@boost//range",
        "@boost//optional",
        "@boost//regex",
        "@boost//math",
    ],
)
